q()
my.array <- array(1:15)
my.array
other.array <- array(20:30)
other.array
my
my.array ~ other.array
value <- my.array ~ other.array
value
model <- randomForest(cnt ~ xformWorkHr + dteday + temp + hum,
data = dataset,
ntree = 40,
nodesize = 5)
install.packages(randomForest)
require(randomForest)
rf.bike <- randomForest(cnt ~ xformWorkHr + dteday +
temp + hum,
data = BikeShare, ntree = 40,
importance = TRUE, nodesize = 5)
bikes
df(bikes)
bikes$dayWeek <- as.factor(weekdays(bikes$dteday))
devtools::install_github("ropensci/bikedata")
install.packages(devtools)
install.packages("devtools")
require(devtools)
devtools::install_github("ropensci/bikedata")
data(bike)
dl_bikedata (city = 'chicago', data_dir = '/data/bikedata/')
install.packages ('bikedata')
require(iris)
iris
iris
library(iris)
as.factor(weekdays(df$dteday))
install.packages("caTools")
require(caTools)
sample.split(Y, SplitRatio = 2/3, group = NULL)
alturas.array <- (1:20)
pesos.array <- (30:50)
par(lm(alturas.array ~ pesos.array))
retar(lm(alturas.array ~ pesos.array))
reta(lm(alturas.array ~ pesos.array))
summary(lm(alturas.array ~ pesos.array))
summary(lm(alturas.array ~ pesos.array))
abline(lm(alturas.array ~ pesos.array))
modelo <- lm( y1 ~ x )
y1 <- (1:20)
modelo <- lm( y1 ~ x )
x <- (2:30)
modelo <- lm( y1 ~ x )
x <- (1:20)
modelo <- lm( y1 ~ x )
modelo
library(readr)
install.packages("readr")
library(readr)
install.packages("readr")
library(readr)
carros <- read_csv("http://datascienceacademy.com.br/blog/aluno/RFundamentos/Datasets/ML/carros-usados.csv")
summary(carros[c('preco', 'kilometragem')])
y = 6
while(y < 5){
y = y+10
print(y)
}
y = 6
while(y < 12){
y = y+10
print(y)
}
alfa = c(10, 20, 30)
beta = c(1, 2, 3, 4, 5, 6, 7, 8, 9)
alfa + beta
v1 = c(2, 3, 5)
v2 = c("aa", "bb", "cc", "dd", "ee")
c(v1, v2)
# NOT RUN {
seq(0, 1, length.out = 11)
seq(stats::rnorm(20)) # effectively 'along'
seq(1, 9, by = 2)     # matches 'end'
seq(1, 9, by = pi)    # stays below 'end'
seq(1, 6, by = 3)
c(1, 2, 3, 4)
rep(1, 2, 3, 4)
a <- rep(1, 2, 3, 4)
a
knit_with_parameters('C:/Users/Oracy/Desktop/DSA_Projetos/DSA_Projetos/Big Data Analytics com R e Microsoft Azure Machine Learning/1.Analise de Sentimentos em Redes Sociais/Anexo/AnaliseRedeSocial.Rmd')
knitr::opts_chunk$set(echo = TRUE, out.width = 80, fig.width = 160)
install.packages("formatR")
knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=80),tidy=TRUE)
# Load library created to clean the data.
source('C:\\Users\\Oracy\\Desktop\\DSA_Projetos\\DSA_Projetos\\Big Data Analytics com R e Microsoft Azure Machine Learning\\1.Analise de Sentimentos em Redes Sociais\\Anexo\\utils.R')
options(warn=-1)
```{r pacotes, eval = F}
# install.packages("twitteR")
# install.packages("httr")
# install.packages("knitr")
# install.packages("rmarkdown")
library(twitteR)
library(httr)
library(knitr)
library(rmarkdown)
# Load library created to clean the data.
source('C:\\Users\\Oracy\\Desktop\\DSA_Projetos\\DSA_Projetos\\Big Data Analytics com R e Microsoft Azure Machine Learning\\1.Analise de Sentimentos em Redes Sociais\\Anexo\\utils.R')
options(warn=-1)
## Step 1 - Data Gathering
# http://archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+%28Diagnostic%29
# http://datascienceacademy.com.br/blog/aluno/RFundamentos/Datasets/ML/wisc_bc_data.csv
df <- read.csv(file = "bc_data.csv", header = TRUE, sep = ",")
str(df)
## Etapa 2 - Data Exploration
# Excluindo a coluna ID
# Check if there is some NA value
# Independentemente do método de aprendizagem de máquina, deve sempre ser excluídas
# variáveis de ID. Caso contrário, isso pode levar a resultados errados porque o ID
# pode ser usado para unicamente "prever" cada exemplo. Por conseguinte, um modelo
# que inclui um identificador pode sofrer de superajuste, e será muito difícil usá-lo para
# generalizar outros dados.
# Font: https://stackoverflow.com/questions/6286313/remove-an-entire-column-from-a-data-frame-in-r
# Font: https://discuss.analyticsvidhya.com/t/how-can-i-check-whether-my-data-frame-contains-na-inf-values-in-some-column-or-not-in-r/1647
df$ID <- NULL
str(df)
any(is.na(df))
df <- read.csv(file = "bc_data.csv", header = TRUE, sep = ",")
str(df)
# Prevendo a Ocorrência de Câncer
# Obs: Caso tenha problemas com a acentuação, consulte este link:
# https://support.rstudio.com/hc/en-us/articles/200532197-Character-Encoding
# Set Directory
setwd("C:\\Users\\Oracy\\Desktop\\DSA_Projetos\\DSA_Projetos\\Big Data Analytics com R e Microsoft Azure Machine Learning\\2.Prevendo a Ocorrencia de Câncer")
getwd()
.csv
df <- read.csv(file = "bc_data.csv", header = TRUE, sep = ",")
str(df)
df <- read.csv(file = "bc_data.csv", header = TRUE, sep = ",")
str(df)
# Set Directory
setwd("C:\\Users\\Oracy\\Desktop\\DSA_Projetos\\DSA_Projetos\\Big Data Analytics com R e Microsoft Azure Machine Learning\\2.Prevendo a Ocorrencia de Cancer")
getwd()
df <- read.csv(file = "bc_data.csv", header = TRUE, sep = ",")
str(df)
df$id <- NULL
str(df)
any(is.na(df))
head(df)
str(df)
df$diagnosis <- factor(df$diagnosis, labels = c("B", "M"), labels = c("Benigno", "Maligno"))
df$diagnosis <- factor(df$diagnosis, levels = c("B", "M"), labels = c("Benigno", "Maligno"))
str(df)
dfProp <- prop.table(table(df$diagnosis), digits = 1)
dfProp
dfProp <- prop.table(table(df$diagnosis) digits = 1)
dfProp <- prop.table(table(df$diagnosis))
dfProp
dfProp <- prop.table(table(df$diagnosis), digits = 1)
dfProp <- format(round(dfProp * 100), digits = 2)
dfProp <- prop.table(table(df$diagnosis))
dfProp <- format(round(dfProp * 100), digits = 2)
dfProp
dfProp <- prop.table(table(df$diagnosis))
dfProp <- format(round(dfProp * 100))
dfProp
# Verificando a proporção
dfProp <- prop.table(table(df$diagnosis))
dfProp <- format(round(dfProp * 100))
# Verificando a proporção
dfProp <- prop.table(table(df$diagnosis))
dfProp <- dfProp * 100
dfProp
specify_decimal(dfProp, 2)
dfProp
dfProp <- round(dfProp, digits = 2)
dfProp
dfProp <- prop.table(round(table(df$diagnosis)) * 100, digits = 2
)
dfProp <- prop.table(round(table(df$diagnosis)) * 100, digits = 2)
dfProp <- round(prop.table(table(df$diagnosis)) * 100, digits = 2)
dfProp
knitr::opts_chunk$set(echo = TRUE)
install.packages ("psych")
